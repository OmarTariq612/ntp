// Code generated by "stringer -output ntp_string.go -type=Version,LeapIndicator,Mode"; DO NOT EDIT.

package proto

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[V4-4]
}

const _Version_name = "V4"

var _Version_index = [...]uint8{0, 2}

func (i Version) String() string {
	i -= 4
	if i >= Version(len(_Version_index)-1) {
		return "Version(" + strconv.FormatInt(int64(i+4), 10) + ")"
	}
	return _Version_name[_Version_index[i]:_Version_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NoWarning-0]
	_ = x[LastMinOfDayHas61Sec-1]
	_ = x[LastMinOfDayHas59Sec-2]
	_ = x[ClockUnsynchronized-3]
}

const _LeapIndicator_name = "NoWarningLastMinOfDayHas61SecLastMinOfDayHas59SecClockUnsynchronized"

var _LeapIndicator_index = [...]uint8{0, 9, 29, 49, 68}

func (i LeapIndicator) String() string {
	if i >= LeapIndicator(len(_LeapIndicator_index)-1) {
		return "LeapIndicator(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LeapIndicator_name[_LeapIndicator_index[i]:_LeapIndicator_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Reserved-0]
	_ = x[SymmetricActive-1]
	_ = x[SymmetricPassive-2]
	_ = x[Client-3]
	_ = x[Server-4]
	_ = x[Broadcast-5]
	_ = x[NTPControlMessage-6]
	_ = x[ReservedPrivate-7]
}

const _Mode_name = "ReservedSymmetricActiveSymmetricPassiveClientServerBroadcastNTPControlMessageReservedPrivate"

var _Mode_index = [...]uint8{0, 8, 23, 39, 45, 51, 60, 77, 92}

func (i Mode) String() string {
	if i >= Mode(len(_Mode_index)-1) {
		return "Mode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Mode_name[_Mode_index[i]:_Mode_index[i+1]]
}
